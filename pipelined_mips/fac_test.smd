main: 
     addi $t0, $0, 0x0F # $t0 = 0x0F
	addi $t1, $0, 1 # $t1 = 1
	sll $t4, $t1, 4 # $t4 = $t1 << 4
fact: 
	lw $t2, 0x0120($0) # read switches @ gpi_1
	and $t3, $t2, $t0  # get input data n
	nop
	nop
	nop
	sw $t3, 0x0100($0) # write input data n
	sw $t1, 0x0104($0) # write control Go bit
poll: 
	lw $t5, 0x0108($0) # read status bits
	beq $t5, $0, poll # wait until done = 2'b10, error = 2'b01
     nop
	srl $t5, $t5, 1 # $t5 = $t5 >> 1
	and $t5, $t5, $t1 # get status Error bit
	and $t3, $t2, $t4 # get display Select
	or $t3, $t3, $t5 # combine Sel and Err	nop
	nop
	lw $t5, 0x010C($0) # read result data nf
     nop
	sw $t3, 0x0128($0) # display Done 
	nop
	sw $t5, 0x012C($0) # display result nf
     nop
     nop
     nop
done: 
	j fact # repeat fact loop
	nop
	